{"version":3,"sources":["admin-metabox.js"],"names":["$","document","ready","each","index","p","input","prev","keyup","len","this","val","length","max","parseInt","attr","min","flg","find","text","removeClass","addClass","datetimepicker","dateFormat","timeFormat","window","IRT","tokenInput","method","queryParam","theme","preventDuplicates","tokenValue","tokenLimit","hintText","noResultsText","searchingText","prePopulate","WPametuTokenInput","row","map","center","zoom","point","marker","geocoder","target","sync","mapCanvas","split","google","maps","LatLng","Map","get","mapTypeId","MapTypeId","ROADMAP","Marker","draggable","position","Geocoder","address","icon","after","geocode","results","status","GeocoderStatus","OK","setCenter","geometry","location","setPosition","remove","timer","focus","push","setInterval","blur","id","clearInterval","event","addListener","e","hasClass","trigger","lat","lng","on","preventDefault","msg","WPametu","alert","jQuery"],"mappings":"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","file":"admin-metabox.js","sourcesContent":["/**\n * Description\n */\n\n/*global google: true*/\n/*global IRT: true*/\n\n(function ($) {\n    'use strict';\n\n    $(document).ready(function(){\n\n        // Char counter\n        $('.char-counter').each(function(index, p){\n            var input = $(p).prev('input, textarea');\n            input.keyup(function(){\n                var len = $(this).val().length,\n                    max = parseInt($(this).attr('data-max-length')),\n                    min = parseInt($(this).attr('data-min-length')),\n                    flg = true;\n                $(p).find('strong').text(len);\n                if( min && len < min ){\n                    flg = false;\n                }\n                if( max && len > max ){\n                    flg = false;\n                }\n                if( flg ){\n                    $(p).removeClass('ng').addClass('ok');\n                }else{\n                    $(p).removeClass('ok').addClass('ng');\n                }\n            });\n        });\n\n        // DateTime Picker\n        $('.wpametu-datetime-picker').datetimepicker({\n            dateFormat: 'yy-mm-dd',\n            timeFormat: 'HH:mm:00'\n        });\n\n        // Token Input\n        if( window.IRT ){\n            $('.token-input').each(function(index, input){\n                $(input).tokenInput($(input).attr('data-endpoint'), {\n                    method: 'GET',\n                    queryParam: 's',\n                    theme: 'admin',\n                    preventDuplicates: true,\n                    tokenValue: 'id',\n                    tokenLimit: $(input).attr('data-max-length') ? parseInt($(input).attr('data-max-length'), 10) : null,\n                    hintText: IRT.hintText,\n                    noResultsText: IRT.noResultsText,\n                    searchingText: IRT.searchingText,\n                    prePopulate: WPametuTokenInput[$(input).attr('id')]\n                });\n            });\n        }\n\n        // Google map\n        $('.geo-row').each(function(index, row){\n            var input = $(row).find('input[type=hidden]'),\n                mapCanvas = $(row).find('.wpametu-map'),\n                geoCoder = $(row).find('.gmap-geocoder'),\n                map, center, zoom, point, marker, geocoder, target, sync;\n            if( input.length && mapCanvas.length ){\n                zoom = parseInt(input.attr('data-zoom'), 10);\n                point = input.val().split(',');\n                // Check this map's role\n                target = $('#' + input.attr('data-target'));\n                if( point.length !== 2 ){\n                    point = [input.attr('data-lat'), input.attr('data-lng')];\n                }\n                center = new google.maps.LatLng(point[0], point[1]);\n                map = new google.maps.Map(mapCanvas.get(0), {\n                    center: center,\n                    zoom: zoom,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP\n                });\n                // Show map marker\n                marker = new google.maps.Marker({\n                    draggable: !input.attr('data-no-drag'),\n                    map: map,\n                    position: center\n                });\n                // Check GeoCoder\n                geocoder = new google.maps.Geocoder();\n                if( !target.length ){\n                    // This is normal map\n                    google.maps.event.addListener(marker, 'position_changed', function(e){\n                        if( !mapCanvas.hasClass('original') ){\n                            // Sync input value\n                            input.val(this.position.lat() + ',' + this.position.lng());\n                        }else{\n                            // Trigger event\n                            mapCanvas.trigger('move.gmap', [marker, map, input]);\n                        }\n                    });\n                    $(row).on('click', '.gmap-geocoder-btn', function(e){\n                        e.preventDefault();\n                        var address = $(this).prev('input').val(),\n                            msg = $(this).attr('data-failure');\n                        if( address.length ){\n                            geocoder.geocode( {\n                                'address': address\n                            }, function( results, status ) {\n                                if (status == google.maps.GeocoderStatus.OK) {\n                                    map.setCenter(results[0].geometry.location);\n                                    marker.setPosition(results[0].geometry.location);\n                                } else {\n                                    WPametu.alert(msg);\n                                }\n                            });\n                        }\n                    });\n                }else{\n                    // This is watcher\n                    sync = function(){\n                        var address = target.val(),\n                            icon = $('<i class=\"dashicons dashicons-update wpametu-spinner\"></i>');\n                        target.after(icon);\n                        if( address.length ){\n                            geocoder.geocode( {\n                                'address': address\n                            }, function( results, status ) {\n                                if (status == google.maps.GeocoderStatus.OK) {\n                                    map.setCenter(results[0].geometry.location);\n                                    marker.setPosition(results[0].geometry.location);\n                                    mapCanvas.addClass('ok');\n                                } else {\n                                    mapCanvas.removeClass('ok');\n                                }\n                                icon.remove();\n                            });\n                        }\n                    };\n                    sync();\n                    // setTimeout\n                    var timer = [];\n                    target.focus(function(){\n                        timer.push(setInterval(sync, 3000));\n                    });\n                    target.blur(function(){\n                        sync();\n                        $.each(timer, function(index, id){\n                            clearInterval(id);\n                        });\n                        timer = [];\n                    });\n                }\n            }\n        });\n\n    });\n\n})(jQuery);\n"],"sourceRoot":"/source/"}